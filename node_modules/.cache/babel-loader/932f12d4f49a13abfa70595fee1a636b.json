{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/interview/src/Component/Qustions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Qustions(_ref) {\n  _s();\n\n  let {\n    qust\n  } = _ref;\n  const [ans, setAns] = useState(0);\n  const [checked, setChecked] = useState([]);\n\n  const changeRadio = (e, id) => {\n    setChecked([...checked, e.target.value]);\n  };\n\n  console.log(qust);\n\n  if (qust.correctOptionIndex.le !== undefined) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: qust.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), qust.options.map((el, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"option\",\n              checked: checked.id,\n              value: id,\n              onChange: changeRadio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), el]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: qust.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), qust.options.map((el, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              checked: checked.id,\n              value: `${id}`,\n              onChange: e => changeRadio(e, id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), el]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Qustions, \"h1sWb11ysRgrU3Gz6tVj+df1Z30=\");\n\n_c = Qustions;\nexport default Qustions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Qustions\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/interview/src/Component/Qustions.js"],"names":["React","useState","Qustions","qust","ans","setAns","checked","setChecked","changeRadio","e","id","target","value","console","log","correctOptionIndex","le","undefined","questionText","options","map","el"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,OAA4B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMO,WAAW,GAAG,CAACC,CAAD,EAAGC,EAAH,KAAU;AAC5BH,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAYG,CAAC,CAACE,MAAF,CAASC,KAArB,CAAD,CAAV;AACD,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AACA,MAAIA,IAAI,CAACY,kBAAL,CAAwBC,EAAxB,KAA+BC,SAAnC,EAA8C;AAC5C,wBACE;AAAA,8BACE;AAAA,kBAAQd,IAAI,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,EAEGf,IAAI,CAACgB,OAAL,CAAaC,GAAb,CAAiB,CAACC,EAAD,EAAKX,EAAL,KAAY;AAC5B,4BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAEJ,OAAO,CAACI,EAHnB;AAIE,cAAA,KAAK,EAAEA,EAJT;AAKE,cAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGa,EARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAA4BX,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAfA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GAtBD,MAsBO;AACL,wBACE;AAAA,8BACE;AAAA,kBAAQP,IAAI,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,EAEGf,IAAI,CAACgB,OAAL,CAAaC,GAAb,CAAiB,CAACC,EAAD,EAAKX,EAAL,KAAY;AAC5B,4BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAEJ,OAAO,CAACI,EAHnB;AAIE,cAAA,KAAK,EAAG,GAAEA,EAAG,EAJf;AAKE,cAAA,QAAQ,EAAGD,CAAD,IAAOD,WAAW,CAACC,CAAD,EAAIC,EAAJ;AAL9B;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGW,EARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAA4BX,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAfA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;AACF;;GApDQR,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Qustions({ qust }) {\n  const [ans, setAns] = useState(0);\n  const [checked, setChecked] = useState([]);\n  const changeRadio = (e,id) => {\n    setChecked([...checked,e.target.value]);\n  };\n  console.log(qust);\n  if (qust.correctOptionIndex.le !== undefined) {\n    return (\n      <form>\n        <label>{qust.questionText}</label>\n        {qust.options.map((el, id) => {\n          return (\n            <div className=\"radio\" key={id}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  name=\"option\"\n                  checked={checked.id}\n                  value={id}\n                  onChange={changeRadio}\n                />\n                {el}\n              </label>\n            </div>\n          );\n        })}\n      </form>\n    );\n  } else {\n    return (\n      <form>\n        <label>{qust.questionText}</label>\n        {qust.options.map((el, id) => {\n          return (\n            <div className=\"radio\" key={id}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"option\"\n                  checked={checked.id}\n                  value={`${id}`}\n                  onChange={(e) => changeRadio(e, id)}\n                />\n                {el}\n              </label>\n            </div>\n          );\n        })}\n      </form>\n    );\n  }\n}\n\nexport default Qustions;\n"]},"metadata":{},"sourceType":"module"}