{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/interview/src/Component/Qustions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    quest,\n    count,\n    name,\n    data\n  } = _ref;\n  const [test, setTest] = useState([false, false, false, false]);\n  console.log(test);\n\n  const onClickHandler = e => {\n    test[e.target.value] = !test[e.target.value];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: quest.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), quest.options.map((op, id) => {\n      console.log(id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\",\n            name: \"option\",\n            checked: test[id],\n            value: id,\n            onChange: e => onClickHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), op]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"mpZkeDGe9dLA0EpcZPp0vsUqFhs=\");\n\n_c = Question;\nexport default _c2 = /*#__PURE__*/React.memo(Question);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/interview/src/Component/Qustions.js"],"names":["React","useEffect","useState","Question","quest","count","name","data","test","setTest","console","log","onClickHandler","e","target","value","questionText","options","map","op","id","type","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,SAASC,QAAT,OAAgD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,GAA8B;AAC9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAD,CAAhC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAE5BL,IAAAA,IAAI,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAJ,GAAuB,CAACP,IAAI,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5B;AACD,GAHD;;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAQX,KAAK,CAACY;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGZ,KAAK,CAACa,OAAN,CAAcC,GAAd,CAAkB,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC7BV,MAAAA,OAAO,CAACC,GAAR,CAAYS,EAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAEhB,KAAK,CAACiB,IAAN,KAAe,mBAAf,GAAqC,OAArC,GAA+C,UADvD;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAEb,IAAI,CAACY,EAAD,CAHf;AAIE,YAAA,KAAK,EAAEA,EAJT;AAKE,YAAA,QAAQ,EAAGP,CAAD,IAAOD,cAAc,CAACC,CAAD;AALjC;AAAA;AAAA;AAAA;AAAA,kBADF,EAQGM,EARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA4BC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAhBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA9BQjB,Q;;KAAAA,Q;AA+BT,kCAAeH,KAAK,CAACsB,IAAN,CAAWnB,QAAX,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction Question({ quest, count, name, data }) {\n  const [test, setTest] = useState([false, false, false, false]);\n\n  console.log(test);\n  const onClickHandler = (e) => {\n   \n    test[e.target.value] = !test[e.target.value];\n  };\n  return (\n    <form>\n      <label>{quest.questionText}</label>\n      {quest.options.map((op, id) => {\n        console.log(id);\n        return (\n          <div className=\"radio\" key={id}>\n            <label>\n              <input\n                type={quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\"}\n                name=\"option\"\n                checked={test[id]}\n                value={id}\n                onChange={(e) => onClickHandler(e)}\n              />\n              {op}\n            </label>\n          </div>\n        );\n      })}\n    </form>\n  );\n}\nexport default React.memo(Question);\n"]},"metadata":{},"sourceType":"module"}