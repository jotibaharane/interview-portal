{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/interview/src/Component/Qustions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Qustions(_ref) {\n  _s();\n\n  let {\n    qust\n  } = _ref;\n  const [ans, setAns] = useState(0);\n  const [checked, setChecked] = useState({\n    0: true,\n    orange: false\n  });\n\n  const changeRadio = e => {\n    setChecked(() => {\n      return {\n        0: false,\n        orange: false,\n        [e.target.value]: true\n      };\n    });\n  };\n\n  if (qust.type === \"Multiple-Response\") {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: qust.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), qust.options.map((el, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"option\",\n              value: `${id}` // onChange={(e) => check(e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 23\n            }, this), el]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: qust.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), qust.options.map((el, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              checked: checked.id,\n              value: `${id}`,\n              onChange: e => check(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 23\n            }, this), el]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Qustions, \"dMPwfhmAULFYSd6hE4R+YPjB+EE=\");\n\n_c = Qustions;\nexport default Qustions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Qustions\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/interview/src/Component/Qustions.js"],"names":["React","useState","Qustions","qust","ans","setAns","checked","setChecked","orange","changeRadio","e","target","value","type","questionText","options","map","el","id","check"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,OAA0B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AACtB,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAaJ,QAAQ,CAAC,CAAD,CAA3B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AAAE,OAAG,IAAL;AAAWO,IAAAA,MAAM,EAAE;AAAnB,GAAD,CAAtC;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBH,IAAAA,UAAU,CAAC,MAAM;AACf,aAAO;AACL,WAAG,KADE;AAELC,QAAAA,MAAM,EAAE,KAFH;AAGL,SAACE,CAAC,CAACC,MAAF,CAASC,KAAV,GAAkB;AAHb,OAAP;AAKD,KANS,CAAV;AAOD,GARH;;AASA,MAAIT,IAAI,CAACU,IAAL,KAAY,mBAAhB,EAAqC;AACjC,wBACI;AAAA,8BACA;AAAA,kBAAQV,IAAI,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,cADA,EAIEX,IAAI,CAACY,OAAL,CAAaC,GAAb,CAAiB,CAACC,EAAD,EAAIC,EAAJ,KAAS;AACxB,4BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACA;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,KAAK,EAAG,GAAEA,EAAG,EAHf,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF,EAOGD,EAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,WAA4BC,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaD,OAdD,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH,GAxBD,MAwBK;AACD,wBACI;AAAA,8BACA;AAAA,kBAAQf,IAAI,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,cADA,EAIEX,IAAI,CAACY,OAAL,CAAaC,GAAb,CAAiB,CAACC,EAAD,EAAIC,EAAJ,KAAS;AACxB,4BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACA;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAEZ,OAAO,CAACY,EAHnB;AAIE,cAAA,KAAK,EAAG,GAAEA,EAAG,EAJf;AAKE,cAAA,QAAQ,EAAGR,CAAD,IAAOS,KAAK,CAACT,CAAC,CAACC,MAAF,CAASC,KAAV;AALxB;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGK,EARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,WAA4BC,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcD,OAfD,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;AAEJ;;GA/DQhB,Q;;KAAAA,Q;AAiET,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\n\nfunction Qustions({qust}) {\n    const [ans,setAns]=useState(0)\n    const [checked, setChecked] = useState({ 0: true, orange: false });\n    const changeRadio = (e) => {\n        setChecked(() => {\n          return {\n            0: false,\n            orange: false,\n            [e.target.value]: true\n          };\n        });\n      };\n    if (qust.type===\"Multiple-Response\") {\n        return (\n            <form >\n            <label>{qust.questionText}</label>\n            {\n              \n              qust.options.map((el,id)=>{\n                return (\n                    <div className=\"radio\" key={id}>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        name=\"option\"   \n                        value={`${id}`}\n                        // onChange={(e) => check(e.target.value)}\n                      />\n                      {el}\n                    </label>\n                  </div>\n                )\n              })\n            }\n            </form>\n              )\n    }else{\n        return (\n            <form >\n            <label>{qust.questionText}</label>\n            {\n              \n              qust.options.map((el,id)=>{\n                return (\n                    <div className=\"radio\" key={id}>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"option\"\n                        checked={checked.id}\n                        value={`${id}`}\n                        onChange={(e) => check(e.target.value)}\n                      />\n                      {el}\n                    </label>\n                  </div>\n                )\n              })\n            }\n            </form>\n              )\n    }\n  \n}\n\nexport default Qustions"]},"metadata":{},"sourceType":"module"}