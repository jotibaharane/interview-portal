{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/interview/src/Component/Qustions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    quest,\n    count,\n    name,\n    data\n  } = _ref;\n  const [test, setTest] = useState([false, false, false, false]);\n  console.log(test);\n\n  const onClickHandler = e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: quest.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), quest.options.map((op, id) => {\n      console.log(id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\",\n            name: \"option\",\n            checked: test[id],\n            value: id,\n            onChange: e => onClickHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), op]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Question, \"uRRuzUotNUa+BxhacVJpeeBPh3Q=\");\n\n_c = Question;\nexport default _c2 = /*#__PURE__*/React.memo(Question);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/interview/src/Component/Qustions.js"],"names":["React","useEffect","useState","Question","quest","count","name","data","test","setTest","console","log","onClickHandler","e","questionText","options","map","op","id","type","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,SAASC,QAAT,OAA+C;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAqBC,IAAAA;AAArB,GAA6B;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAAD,CAAhC;AAEFQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACE,QAAMI,cAAc,GAAIC,CAAD,IAAO,CAI7B,CAJD;;AAKE,sBACE;AAAA,4BACE;AAAA,gBAAQT,KAAK,CAACU;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGV,KAAK,CAACW,OAAN,CAAcC,GAAd,CAAkB,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC7BR,MAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,IAAI,EACFd,KAAK,CAACe,IAAN,KAAe,mBAAf,GAAqC,OAArC,GAA+C,UAFnD;AAIE,YAAA,IAAI,EAAC,QAJP;AAKE,YAAA,OAAO,EAAEX,IAAI,CAACU,EAAD,CALf;AAME,YAAA,KAAK,EAAEA,EANT;AAOE,YAAA,QAAQ,EAAGL,CAAD,IAAOD,cAAc,CAACC,CAAD;AAPjC;AAAA;AAAA;AAAA;AAAA,kBADF,EAUGI,EAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA4BC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD,KAlBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBH;;GAjCQf,Q;;KAAAA,Q;AAkCT,kCAAeH,KAAK,CAACoB,IAAN,CAAWjB,QAAX,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction Question({ quest, count, name,data }) {\n  const [test, setTest] = useState([false,false,false,false]);\n\nconsole.log(test);\n  const onClickHandler = (e) => {\n\n    \n  \n  };\n    return (\n      <form  >\n        <label>{quest.questionText}</label>\n        {quest.options.map((op, id) => {\n          console.log(id)\n          return (\n            <div className=\"radio\" key={id}>\n              <label>\n                <input\n                  type={\n                    quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\"\n                  }\n                  name=\"option\"\n                  checked={test[id]}\n                  value={id}\n                  onChange={(e) => onClickHandler(e)}\n                />\n                {op}\n              </label>\n            </div>\n          );\n        })}\n      </form>\n    );\n}\nexport default React.memo(Question);"]},"metadata":{},"sourceType":"module"}