{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/interview/src/Component/Qustions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    quest,\n    count,\n    name,\n    data\n  } = _ref;\n  const [test, setTest] = useState([]);\n  const [checkBox, setCheckBox] = useState();\n  console.log(data.questions[count].options);\n  useEffect(() => {\n    setTest(JSON.parse(localStorage.getItem(JSON.stringify(name))) !== null ? JSON.parse(localStorage.getItem(JSON.stringify(name))) : data.questions.map((el, id) => new Array(data.questions[count].options.length).fill(false)));\n  }, [quest]);\n\n  const onClickHandler = e => {\n    if (quest.type !== undefined) {\n      e.target.checked ? test[e.target.value] = true : test[e.target.value] = false;\n    } else {\n      if (e.target.checked) {\n        test = new Array(quest.options.length).fill(false);\n        test[e.target.value] = true;\n      }\n    }\n\n    setTest(test); // localStorage.setItem(JSON.stringify(name),JSON.stringify(test))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: quest.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), quest.options.map((op, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\",\n            name: \"option\",\n            checked: test[id],\n            value: id,\n            onChange: e => onClickHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), op]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Question, \"gJrIgNFoRVIemw/TbPXds20ogUQ=\");\n\n_c = Question;\nexport default _c2 = /*#__PURE__*/React.memo(Question);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/interview/src/Component/Qustions.js"],"names":["React","useEffect","useState","Question","quest","count","name","data","test","setTest","checkBox","setCheckBox","console","log","questions","options","JSON","parse","localStorage","getItem","stringify","map","el","id","Array","length","fill","onClickHandler","e","type","undefined","target","checked","value","questionText","op","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction Question({ quest, count, name,data }) {\n  const [test, setTest] = useState([]);\n  const [checkBox,setCheckBox]=useState()\n  console.log(data.questions[count].options);\nuseEffect(()=>{\nsetTest(\n  JSON.parse(localStorage.getItem(JSON.stringify(name))) !== null\n    ? JSON.parse(localStorage.getItem(JSON.stringify(name)))\n    : data.questions.map((el, id) =>\n    new Array(data.questions[count].options.length).fill(false)\n  )\n);\n},[quest])\n\n  const onClickHandler = (e) => {\n    if (quest.type !== undefined) {\n      e.target.checked\n        ? (test[e.target.value] = true)\n        : (test[e.target.value] = false);\n    } else {\n      if (e.target.checked) {\n        test = new Array(quest.options.length).fill(false);\n        test[e.target.value] = true\n      }\n    }\n    setTest(test)\n    // localStorage.setItem(JSON.stringify(name),JSON.stringify(test))\n  };\n    return (\n      <form  >\n        <label>{quest.questionText}</label>\n        {quest.options.map((op, id) => {\n        \n          return (\n            <div className=\"radio\" key={id}>\n              <label>\n                <input\n                  type={\n                    quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\"\n                  }\n                  name=\"option\"\n                  checked={test[id]}\n                  value={id}\n                  onChange={(e) => onClickHandler(e)}\n                />\n                {op}\n              </label>\n            </div>\n          );\n        })}\n      </form>\n    );\n}\nexport default React.memo(Question);"]},"metadata":{},"sourceType":"module"}