{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/interview/src/Component/Qustions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    quest,\n    count,\n    name,\n    data\n  } = _ref;\n  console.log(data._id);\n  const [test, setTest] = useState(JSON.parse(localStorage.getItem(JSON.stringify(name))) !== null ? JSON.parse(localStorage.getItem(JSON.stringify(name))) : data.questions.map((el, id) => new Array(data.questions[id].options.length).fill(false)));\n  const [ans, setAns] = useState(JSON.parse(localStorage.getItem(JSON.stringify(data._id))) !== null ? JSON.parse(localStorage.getItem(JSON.stringify(data._id))) : data.questions.map((el, id) => new Array(data.questions[id].options.length).fill(false)));\n  const [checkBox, setCheckBox] = useState([]);\n  const [answer, setAnswer] = useState([]);\n  useEffect(() => {\n    setCheckBox(test[count]);\n  }, [count]);\n\n  const onClickHandler = e => {\n    let a = [...checkBox];\n\n    if (quest.type !== undefined) {\n      a[e.target.value] = !a[e.target.value];\n      setCheckBox(a);\n    } else {\n      a = new Array(quest.options.length).fill(false);\n      console.log(a);\n      a[e.target.value] = !a[e.target.value];\n      setCheckBox(a);\n    }\n  };\n\n  useEffect(() => {\n    test[count] = checkBox;\n    localStorage.setItem(JSON.stringify(name), JSON.stringify(test));\n    localStorage.setItem(JSON.stringify(data._id), JSON.stringify(answer));\n  }, [checkBox]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: quest.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), quest.options.map((op, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\",\n            name: \"option\",\n            checked: checkBox[id],\n            value: id,\n            onChange: e => onClickHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), op]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"WLJE3wh6fnzUUId7yzLF991B9nI=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/interview/src/Component/Qustions.js"],"names":["React","useEffect","useState","Question","quest","count","name","data","console","log","_id","test","setTest","JSON","parse","localStorage","getItem","stringify","questions","map","el","id","Array","options","length","fill","ans","setAns","checkBox","setCheckBox","answer","setAnswer","onClickHandler","e","a","type","undefined","target","value","setItem","questionText","op"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction Question({ quest, count, name, data }) {\n  console.log(data._id);\n  const [test, setTest] = useState(\n    JSON.parse(localStorage.getItem(JSON.stringify(name))) !== null\n      ? JSON.parse(localStorage.getItem(JSON.stringify(name)))\n      : data.questions.map((el, id) =>\n          new Array(data.questions[id].options.length).fill(false)\n        )\n  );\n  const [ans, setAns] = useState(JSON.parse(localStorage.getItem(JSON.stringify(data._id))) !== null\n  ? JSON.parse(localStorage.getItem(JSON.stringify(data._id)))\n  : data.questions.map((el, id) =>\n      new Array(data.questions[id].options.length).fill(false)\n    ))\n  const [checkBox, setCheckBox] = useState([]);\n  const [answer, setAnswer] = useState([]);\n  useEffect(() => {\n    setCheckBox(test[count]);\n  }, [count]);\n\n  const onClickHandler = (e) => {\n    let a = [...checkBox];\n    if (quest.type !== undefined) {\n      a[e.target.value] = !a[e.target.value];\n      setCheckBox(a);\n    } else {\n      a = new Array(quest.options.length).fill(false);\n      console.log(a);\n      a[e.target.value] = !a[e.target.value];\n      setCheckBox(a);\n    }\n  };\n\n  useEffect(() => {\n    test[count] = checkBox;\n    localStorage.setItem(JSON.stringify(name), JSON.stringify(test));\n    localStorage.setItem(JSON.stringify(data._id), JSON.stringify(answer));\n  }, [checkBox]);\n\n  return (\n    <form>\n      <label>{quest.questionText}</label>\n      {quest.options.map((op, id) => {\n        return (\n          <div className=\"radio\" key={id}>\n            <label>\n              <input\n                type={quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\"}\n                name=\"option\"\n                checked={checkBox[id]}\n                value={id}\n                onChange={(e) => onClickHandler(e)}\n              />\n              {op}\n            </label>\n          </div>\n        );\n      })}\n    </form>\n  );\n}\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}