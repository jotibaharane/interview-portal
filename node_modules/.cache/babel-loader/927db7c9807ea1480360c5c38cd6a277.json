{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/interview/src/Component/Qustions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(_ref) {\n  _s();\n\n  let {\n    quest,\n    count,\n    name,\n    data\n  } = _ref;\n  const [test, setTest] = useState(); // useEffect(()=>{\n  // setTest(\n  //   JSON.parse(localStorage.getItem(JSON.stringify(name))) !== null\n  //     ? JSON.parse(localStorage.getItem(JSON.stringify(name)))\n  //     : data.questions.map((el, id) =>\n  //     new Array(data.questions[id].options.length).fill(false)\n  //   )\n  // );\n  // },[ ])\n\n  console.log(test);\n\n  const onClickHandler = e => {\n    if (quest.type !== undefined) {\n      e.target.checked ? test[e.target.value] = true : test[e.target.value] = false;\n    } else {\n      if (e.target.checked) {\n        test = new Array(quest.options.length).fill(false);\n        test[e.target.value] = true;\n      }\n    }\n\n    setTest(test); // localStorage.setItem(JSON.stringify(name),JSON.stringify(test))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: quest.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), quest.options.map((op, id) => {\n      console.log(id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\",\n            name: \"option\",\n            checked: test[id],\n            value: id,\n            onChange: e => onClickHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), op]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Question, \"EMd2q1UujIorSKPUpZEbwkhJOTo=\");\n\n_c = Question;\nexport default _c2 = /*#__PURE__*/React.memo(Question);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/interview/src/Component/Qustions.js"],"names":["React","useEffect","useState","Question","quest","count","name","data","test","setTest","console","log","onClickHandler","e","type","undefined","target","checked","value","Array","options","length","fill","questionText","map","op","id","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,SAASC,QAAT,OAA+C;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAqBC,IAAAA;AAArB,GAA6B;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC,CAD6C,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACE,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIT,KAAK,CAACU,IAAN,KAAeC,SAAnB,EAA8B;AAC5BF,MAAAA,CAAC,CAACG,MAAF,CAASC,OAAT,GACKT,IAAI,CAACK,CAAC,CAACG,MAAF,CAASE,KAAV,CAAJ,GAAuB,IAD5B,GAEKV,IAAI,CAACK,CAAC,CAACG,MAAF,CAASE,KAAV,CAAJ,GAAuB,KAF5B;AAGD,KAJD,MAIO;AACL,UAAIL,CAAC,CAACG,MAAF,CAASC,OAAb,EAAsB;AACpBT,QAAAA,IAAI,GAAG,IAAIW,KAAJ,CAAUf,KAAK,CAACgB,OAAN,CAAcC,MAAxB,EAAgCC,IAAhC,CAAqC,KAArC,CAAP;AACAd,QAAAA,IAAI,CAACK,CAAC,CAACG,MAAF,CAASE,KAAV,CAAJ,GAAuB,IAAvB;AACD;AACF;;AACDT,IAAAA,OAAO,CAACD,IAAD,CAAP,CAX4B,CAY5B;AACD,GAbD;;AAcE,sBACE;AAAA,4BACE;AAAA,gBAAQJ,KAAK,CAACmB;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGnB,KAAK,CAACgB,OAAN,CAAcI,GAAd,CAAkB,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC7BhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,EAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,IAAI,EACFtB,KAAK,CAACU,IAAN,KAAe,mBAAf,GAAqC,OAArC,GAA+C,UAFnD;AAIE,YAAA,IAAI,EAAC,QAJP;AAKE,YAAA,OAAO,EAAEN,IAAI,CAACkB,EAAD,CALf;AAME,YAAA,KAAK,EAAEA,EANT;AAOE,YAAA,QAAQ,EAAGb,CAAD,IAAOD,cAAc,CAACC,CAAD;AAPjC;AAAA;AAAA;AAAA;AAAA,kBADF,EAUGY,EAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA4BC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD,KAlBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBH;;GAlDQvB,Q;;KAAAA,Q;AAmDT,kCAAeH,KAAK,CAAC2B,IAAN,CAAWxB,QAAX,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction Question({ quest, count, name,data }) {\n  const [test, setTest] = useState();\n// useEffect(()=>{\n// setTest(\n//   JSON.parse(localStorage.getItem(JSON.stringify(name))) !== null\n//     ? JSON.parse(localStorage.getItem(JSON.stringify(name)))\n//     : data.questions.map((el, id) =>\n//     new Array(data.questions[id].options.length).fill(false)\n//   )\n// );\n// },[ ])\nconsole.log(test);\n  const onClickHandler = (e) => {\n    if (quest.type !== undefined) {\n      e.target.checked\n        ? (test[e.target.value] = true)\n        : (test[e.target.value] = false);\n    } else {\n      if (e.target.checked) {\n        test = new Array(quest.options.length).fill(false);\n        test[e.target.value] = true\n      }\n    }\n    setTest(test)\n    // localStorage.setItem(JSON.stringify(name),JSON.stringify(test))\n  };\n    return (\n      <form  >\n        <label>{quest.questionText}</label>\n        {quest.options.map((op, id) => {\n          console.log(id)\n          return (\n            <div className=\"radio\" key={id}>\n              <label>\n                <input\n                  type={\n                    quest.type !== \"Multiple-Response\" ? \"radio\" : \"checkbox\"\n                  }\n                  name=\"option\"\n                  checked={test[id]}\n                  value={id}\n                  onChange={(e) => onClickHandler(e)}\n                />\n                {op}\n              </label>\n            </div>\n          );\n        })}\n      </form>\n    );\n}\nexport default React.memo(Question);"]},"metadata":{},"sourceType":"module"}